// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// case_a
List case_a(NumericMatrix df, NumericMatrix score, CharacterMatrix suiClass, double Min, double Max, double mfNum, double bias, int j, double a, double b, double c, double l1, double l2, double l3, double l4, double l5, double sigma);
RcppExport SEXP _ALUES_case_a(SEXP dfSEXP, SEXP scoreSEXP, SEXP suiClassSEXP, SEXP MinSEXP, SEXP MaxSEXP, SEXP mfNumSEXP, SEXP biasSEXP, SEXP jSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP l1SEXP, SEXP l2SEXP, SEXP l3SEXP, SEXP l4SEXP, SEXP l5SEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type df(dfSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type score(scoreSEXP);
    Rcpp::traits::input_parameter< CharacterMatrix >::type suiClass(suiClassSEXP);
    Rcpp::traits::input_parameter< double >::type Min(MinSEXP);
    Rcpp::traits::input_parameter< double >::type Max(MaxSEXP);
    Rcpp::traits::input_parameter< double >::type mfNum(mfNumSEXP);
    Rcpp::traits::input_parameter< double >::type bias(biasSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type l1(l1SEXP);
    Rcpp::traits::input_parameter< double >::type l2(l2SEXP);
    Rcpp::traits::input_parameter< double >::type l3(l3SEXP);
    Rcpp::traits::input_parameter< double >::type l4(l4SEXP);
    Rcpp::traits::input_parameter< double >::type l5(l5SEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(case_a(df, score, suiClass, Min, Max, mfNum, bias, j, a, b, c, l1, l2, l3, l4, l5, sigma));
    return rcpp_result_gen;
END_RCPP
}
// case_b
List case_b(NumericMatrix df, NumericMatrix score, CharacterMatrix suiClass, double Min, double Max, double mfNum, double bias, int j, double a, double b, double c, double l1, double l2, double l3, double l4, double l5, double sigma);
RcppExport SEXP _ALUES_case_b(SEXP dfSEXP, SEXP scoreSEXP, SEXP suiClassSEXP, SEXP MinSEXP, SEXP MaxSEXP, SEXP mfNumSEXP, SEXP biasSEXP, SEXP jSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP l1SEXP, SEXP l2SEXP, SEXP l3SEXP, SEXP l4SEXP, SEXP l5SEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type df(dfSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type score(scoreSEXP);
    Rcpp::traits::input_parameter< CharacterMatrix >::type suiClass(suiClassSEXP);
    Rcpp::traits::input_parameter< double >::type Min(MinSEXP);
    Rcpp::traits::input_parameter< double >::type Max(MaxSEXP);
    Rcpp::traits::input_parameter< double >::type mfNum(mfNumSEXP);
    Rcpp::traits::input_parameter< double >::type bias(biasSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type l1(l1SEXP);
    Rcpp::traits::input_parameter< double >::type l2(l2SEXP);
    Rcpp::traits::input_parameter< double >::type l3(l3SEXP);
    Rcpp::traits::input_parameter< double >::type l4(l4SEXP);
    Rcpp::traits::input_parameter< double >::type l5(l5SEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(case_b(df, score, suiClass, Min, Max, mfNum, bias, j, a, b, c, l1, l2, l3, l4, l5, sigma));
    return rcpp_result_gen;
END_RCPP
}
// case_c
List case_c(NumericMatrix df, NumericMatrix score, CharacterMatrix suiClass, double Min, double Max, double Mid, double mfNum, double bias, int j, double a, double b, double c, double d, double e, double f, double l1, double l2, double l3, double l4, double l5, double sigma);
RcppExport SEXP _ALUES_case_c(SEXP dfSEXP, SEXP scoreSEXP, SEXP suiClassSEXP, SEXP MinSEXP, SEXP MaxSEXP, SEXP MidSEXP, SEXP mfNumSEXP, SEXP biasSEXP, SEXP jSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP dSEXP, SEXP eSEXP, SEXP fSEXP, SEXP l1SEXP, SEXP l2SEXP, SEXP l3SEXP, SEXP l4SEXP, SEXP l5SEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type df(dfSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type score(scoreSEXP);
    Rcpp::traits::input_parameter< CharacterMatrix >::type suiClass(suiClassSEXP);
    Rcpp::traits::input_parameter< double >::type Min(MinSEXP);
    Rcpp::traits::input_parameter< double >::type Max(MaxSEXP);
    Rcpp::traits::input_parameter< double >::type Mid(MidSEXP);
    Rcpp::traits::input_parameter< double >::type mfNum(mfNumSEXP);
    Rcpp::traits::input_parameter< double >::type bias(biasSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type e(eSEXP);
    Rcpp::traits::input_parameter< double >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type l1(l1SEXP);
    Rcpp::traits::input_parameter< double >::type l2(l2SEXP);
    Rcpp::traits::input_parameter< double >::type l3(l3SEXP);
    Rcpp::traits::input_parameter< double >::type l4(l4SEXP);
    Rcpp::traits::input_parameter< double >::type l5(l5SEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(case_c(df, score, suiClass, Min, Max, Mid, mfNum, bias, j, a, b, c, d, e, f, l1, l2, l3, l4, l5, sigma));
    return rcpp_result_gen;
END_RCPP
}
// case_d
List case_d(NumericMatrix df, NumericMatrix score, CharacterMatrix suiClass, double Min, double Max, double Mid, double mfNum, double bias, int j, double a, double b, double c, double d, double l1, double l2, double l3, double l4, double l5, double sigma);
RcppExport SEXP _ALUES_case_d(SEXP dfSEXP, SEXP scoreSEXP, SEXP suiClassSEXP, SEXP MinSEXP, SEXP MaxSEXP, SEXP MidSEXP, SEXP mfNumSEXP, SEXP biasSEXP, SEXP jSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP dSEXP, SEXP l1SEXP, SEXP l2SEXP, SEXP l3SEXP, SEXP l4SEXP, SEXP l5SEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type df(dfSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type score(scoreSEXP);
    Rcpp::traits::input_parameter< CharacterMatrix >::type suiClass(suiClassSEXP);
    Rcpp::traits::input_parameter< double >::type Min(MinSEXP);
    Rcpp::traits::input_parameter< double >::type Max(MaxSEXP);
    Rcpp::traits::input_parameter< double >::type Mid(MidSEXP);
    Rcpp::traits::input_parameter< double >::type mfNum(mfNumSEXP);
    Rcpp::traits::input_parameter< double >::type bias(biasSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type l1(l1SEXP);
    Rcpp::traits::input_parameter< double >::type l2(l2SEXP);
    Rcpp::traits::input_parameter< double >::type l3(l3SEXP);
    Rcpp::traits::input_parameter< double >::type l4(l4SEXP);
    Rcpp::traits::input_parameter< double >::type l5(l5SEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(case_d(df, score, suiClass, Min, Max, Mid, mfNum, bias, j, a, b, c, d, l1, l2, l3, l4, l5, sigma));
    return rcpp_result_gen;
END_RCPP
}
// case_e
List case_e(NumericMatrix df, NumericMatrix score, CharacterMatrix suiClass, double Min, double Max, double Mid, double mfNum, double bias, int j, double a, double b, double c, double l1, double l2, double l3, double l4, double l5, double sigma);
RcppExport SEXP _ALUES_case_e(SEXP dfSEXP, SEXP scoreSEXP, SEXP suiClassSEXP, SEXP MinSEXP, SEXP MaxSEXP, SEXP MidSEXP, SEXP mfNumSEXP, SEXP biasSEXP, SEXP jSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP l1SEXP, SEXP l2SEXP, SEXP l3SEXP, SEXP l4SEXP, SEXP l5SEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type df(dfSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type score(scoreSEXP);
    Rcpp::traits::input_parameter< CharacterMatrix >::type suiClass(suiClassSEXP);
    Rcpp::traits::input_parameter< double >::type Min(MinSEXP);
    Rcpp::traits::input_parameter< double >::type Max(MaxSEXP);
    Rcpp::traits::input_parameter< double >::type Mid(MidSEXP);
    Rcpp::traits::input_parameter< double >::type mfNum(mfNumSEXP);
    Rcpp::traits::input_parameter< double >::type bias(biasSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type l1(l1SEXP);
    Rcpp::traits::input_parameter< double >::type l2(l2SEXP);
    Rcpp::traits::input_parameter< double >::type l3(l3SEXP);
    Rcpp::traits::input_parameter< double >::type l4(l4SEXP);
    Rcpp::traits::input_parameter< double >::type l5(l5SEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(case_e(df, score, suiClass, Min, Max, Mid, mfNum, bias, j, a, b, c, l1, l2, l3, l4, l5, sigma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ALUES_case_a", (DL_FUNC) &_ALUES_case_a, 17},
    {"_ALUES_case_b", (DL_FUNC) &_ALUES_case_b, 17},
    {"_ALUES_case_c", (DL_FUNC) &_ALUES_case_c, 21},
    {"_ALUES_case_d", (DL_FUNC) &_ALUES_case_d, 19},
    {"_ALUES_case_e", (DL_FUNC) &_ALUES_case_e, 18},
    {NULL, NULL, 0}
};

RcppExport void R_init_ALUES(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
